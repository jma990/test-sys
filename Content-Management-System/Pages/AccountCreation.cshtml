@page
@model Content_Management_System.Pages.AccountCreationModel
@{
}

<h2>Create Account</h2>
<form method="post">
    <div class="mb-3">
        <label class="form-label">First Name</label><span class="text-danger">*</span>
        <input asp-for="FirstName" class="form-control" />
        @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
    </div>

    <div class="mb-3">
        <label class="form-label">Middle Name</label>
        <input asp-for="MiddleName" class="form-control" />
    </div>

    <div class="mb-3">
        <label class="form-label">Last Name</label><span class="text-danger">*</span>
        <input asp-for="LastName" class="form-control" />
        @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
    </div>

    <div class="mb-3">
        <label class="form-label">Email</label><span class="text-danger">*</span>
        <input asp-for="Email" type="email" class="form-control" />
        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
    </div>

    <div class="mb-3">
        <label class="form-label">Department</label><span class="text-danger">*</span>
        <select asp-for="DepartmentID" class="form-control" required>
            <option value="">-- Select Department --</option>
            @foreach (var dept in Model.Departments)
            {
                <option value="@dept.ID">@dept.DepartmentName</option>
            }
        </select>
    </div>

    <div class="mb-3">
        <label class="form-label">Role</label><span class="text-danger">*</span>
        <select asp-for="Role" class="form-control" required>
            @if (User.IsInRole("SuperAdmin"))
            {
                <option value="1">Admin</option>
                <option value="2">Member</option>
            }
            else if (User.IsInRole("Admin"))
            {
                <option value="2">Member</option>
            }
        </select>
    </div>

    <button type="submit" class="btn btn-primary">Create Account</button>
</form>

@section Scripts {
    @if (TempData["Message"] != null)
    {
        var message = TempData["Message"].ToString();
        var tempPassword = "";

        if (message.Contains("Temporary password is:"))
        {
            var parts = message.Split("Temporary password is:");
            var infoMessage = parts[0].Trim();
            tempPassword = parts.Length > 1 ? parts[1].Trim() : "";
        }

        <text>
            <script>
                document.addEventListener("DOMContentLoaded", () => {
                    const msg = "@message";
                    const tempPass = "@tempPassword";

                    if (tempPass && tempPass.length > 0) {
                        Swal.fire({
                            icon: 'info',
                            title: 'Temporary Password',
                            html: `
                                <p>User created successfully.</p>
                                <p><strong>${tempPass}</strong></p>
                                <p id="timer-text">This password will disappear in <b>30</b> seconds.</p>
                            `,
                            timer: 30000,
                            timerProgressBar: true,
                            allowOutsideClick: true,
                            allowEscapeKey: true,
                            allowEnterKey: true,
                            didOpen: () => {
                                const timerText = Swal.getPopup().querySelector('#timer-text').querySelector('b');
                                const interval = setInterval(() => {
                                    const timeLeft = Math.ceil(Swal.getTimerLeft() / 1000);
                                    timerText.textContent = timeLeft;
                                }, 1000);

                                Swal.showLoading();

                                Swal.getPopup().addEventListener('swal:close', () => {
                                    clearInterval(interval);
                                });
                            },
                            willClose: () => {
                                location.reload();
                            }
                        });
                    } else {
                        Swal.fire({
                            icon: 'info',
                            title: 'Notification',
                            text: msg,
                            willClose: () => {
                                location.reload();
                            }
                        });
                    }
                });
            </script>
        </text>
    }
}