<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Populate department dropdown
        fetch("/Announcements/GetDepartments")
            .then(response => response.json())
            .then(departments => {
                const departmentSelect = document.getElementById("announcementDepartment");

                // Add "All" option manually
                const allOption = document.createElement("option");
                allOption.value = "0";  // will mean ALL
                allOption.textContent = "All Departments";
                departmentSelect.appendChild(allOption);

                // Populate DB departments
                departments.forEach(dept => {
                    const option = document.createElement("option");
                    option.value = dept.id;
                    option.textContent = dept.departmentName;
                    departmentSelect.appendChild(option);
                });
            })
            .catch(error => {
                console.error("Error fetching departments:", error);
            });

        // Submission handler
        const submitBtn = document.getElementById('submitAnnouncement');
        if (submitBtn) {
            submitBtn.addEventListener('click', function (e) {
                e.preventDefault(); // prevent default form submit

                console.log("Submitting form");

                const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
                const title = document.getElementById('announcementTitle').value || "";
                const content = document.getElementById('announcementContent').value || "";
                const departmentID = parseInt(document.getElementById('announcementDepartment').value) || 0;
                const link = document.getElementById('announcementLink').value || "";
                console.log(`Title: ${title}, Content: ${content}, DepartmentID: ${departmentID}, Link: ${link}`);

                fetch(`/Announcements/AddAnnouncement`, {
                    method: 'POST',
                    headers: {
                        "Content-Type": "application/json",
                        "RequestVerificationToken": token 
                    },
                    body: JSON.stringify({
                        Title: title,
                        Content: content,
                        DepartmentID: departmentID,
                        Link: link
                    })
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`Server returned ${response.status}`);
                    }
                    return response.json();
                })
                .then(result => {
                    if (result.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: result.message,
                            confirmButtonText: 'OK',
                            confirmButtonColor: '#198754'
                        }).then(() => {
                            hideForm('AddAnnouncementModal');

                            // Reset form
                            document.getElementById('announcementTitle').value = "";
                            document.getElementById('announcementContent').value = "";
                            document.getElementById('announcementDepartment').value = "";
                            document.getElementById('announcementLink').value = "";
                            
                            // Refresh the page
                            location.reload();
                        });
                    } 
                    else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: result.message || "Failed to add announcement.",
                            confirmButtonText: 'OK',
                            confirmButtonColor: '#dc3545'
                        });
                    }
                })
            });
        }
    });
</script>


<div class="modal fade" id="AddAnnouncementModal" tabindex="-1" aria-labelledby="AddAnnouncementModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="AddAnnouncementModalLabel">Add Announcement</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        @Html.AntiForgeryToken()
        <!-- Title -->
        <div class="mb-3">
            <label for="announcementTitle" class="form-label">Title</label><span class="text-danger">*</span>
            <input type="text" class="form-control" id="announcementTitle" name="Title" placeholder="Enter announcement title" required>
        </div>

        <!-- Content -->
        <div class="mb-3">
            <label for="announcementContent" class="form-label">Content</label><span class="text-danger">*</span>
            <textarea class="form-control" id="announcementContent" name="Content" rows="4" placeholder="Enter announcement details" required></textarea>
        </div>

        <!-- Department Dropdown -->
        <div class="mb-3">
            <label for="announcementDepartment" class="form-label">Department</label><span class="text-danger">*</span>
            <select class="form-select" id="announcementDepartment" name="DepartmentID" required>
                <!-- Options will be populated dynamically via JavaScript -->
            </select>
        </div>
        
        <!-- Link (optional) -->
        <div class="mb-3">
            <label for="announcementLink" class="form-label">Link (optional)</label>
            <input type="url" class="form-control" id="announcementLink" name="Link" placeholder="https://example.com">
        </div>

        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            <button id="submitAnnouncement" type="submit" class="btn btn-primary">Save Announcement</button>
        </div>
        <div id="formError" class="text-danger" style="display: none;"></div>
      </div>
    </div>
  </div>
</div>
